
.deployToStand:
  script:
    - dotnet restore "Meets/Meets.csproj"
    - dotnet build "Meets/Meets.csproj" -c Release -o ./bin/Release
    - Stop-WebSite -Name "$NAME_SITE" -Passthru

    - Stop-WebAppPool -Name "$NAME_SITE" -Passthru

    - $currentRetry = 0;
    - $success = $false;
    - do{ \
     $status = Get-WebAppPoolState -name "$NAME_SITE" \
     if ($status -eq "Stopped"){ \
           <....your code here....> \
           $success = $true; \
         } \
         Start-Sleep -s 1 \
         $currentRetry = $currentRetry + 1; \        
     } \
     while (!$success -and $currentRetry -le 4) \


    - Stop-WebAppPool -Name "$NAME_POOL" -Passthru
    - rm $PATH_SITE\* -r -fo
    - dotnet publish "Meets/Meets.csproj" -c Release -o $PATH_SITE
    - Start-WebAppPool -Name "$NAME_POOL" -Passthru
    - Start-WebSite -Name "$NAME_SITE" -Passthru


stages:
  - deploy

variables:
  NAME_SITE: meets
  NAME_POOL: meets
  PATH_SITE: C:\inetpub\meets
  TEST: my-test-app
  MAIN: my-main-app


prod:
  stage: deploy
  tags:
    - vw-app-prod-1
  script:
    - dotnet restore "Meets/Meets.csproj"
    - dotnet build "Meets/Meets.csproj" -c Release -o ./bin/Release
    - Stop-WebSite -Name "$NAME_SITE" -Passthru
    - Stop-WebAppPool -Name "$NAME_POOL" -Passthru
    - rm $PATH_SITE\* -r -fo
    - dotnet publish "Meets/Meets.csproj" -c Release -o $PATH_SITE
    - Start-WebAppPool -Name "$NAME_POOL" -Passthru
    - Start-WebSite -Name "$NAME_SITE" -Passthru
  when: manual

test1:
  stage: deploy
  tags:
    - vw-app-test-1
  script:
    - !reference [.deployToStand, script]
  variables:
    NAME_SITE: test1
    NAME_POOL: test1
    PATH_SITE: C:\inetpub\test1
  when: manual


